# Generated by Django 4.2.1 on 2023-05-11 16:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Taller',
            fields=[
                ('id_taller', models.CharField(max_length=4, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^T\\d{3}$', code='invalid_id_taller', message='El ID del taller debe tener el formato T001')])),
                ('nombre', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_nombre_taller', message='El nombre de taller debe tener solo numeros y letras', regex='^[a-zA-Z0-9]+$')])),
                ('id_direccion', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999)])),
                ('mail', models.EmailField(max_length=254)),
                ('telefono', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='El número de teléfono debe tener el formato +1234567890 y contener de 9 a 15 dígitos.', regex='^\\+?1?\\d{9,15}$')])),
                ('id_sucursal', models.CharField(max_length=4, validators=[django.core.validators.RegexValidator('^S\\d{3}$', code='invalid_id_sucursal', message='El ID de sucursal debe tener el formato S001')])),
                ('capacidad', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('cant_tecnicos', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(45)])),
            ],
        ),
        migrations.CreateModel(
            name='Turno_taller',
            fields=[
                ('id_turno', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('service', 'Service'), ('evaluacion', 'Evaluacion'), ('extraordinario', 'Extraordinario'), ('reparacion', 'Reparacion')], default='service', max_length=14)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('rechazado', 'Rechazado'), ('en_proceso', 'En proceso'), ('terminado', 'Terminado')], default='en_proceso', max_length=10)),
                ('tecnico_id', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
                ('patente', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator('^(([A-Z]{2}\\d{3}[A-Z]{2})|([A-Z]{3}\\d{3}))$', code='invalid_patente', message='La patente ingresada no es valida. Debe ser en mayusculas con el formato 00AAA00 o ')])),
                ('fecha_inicio', models.DateField(max_length=10)),
                ('hora_inicio', models.TimeField(max_length=8)),
                ('fecha_fin', models.DateField(max_length=10)),
                ('hora_fin', models.TimeField(max_length=8)),
                ('frecuencia_km', models.IntegerField(blank=True, choices=[(5000, '5.000 KM'), (10000, '10.000 KM'), (15000, '15.000 KM'), (20000, '20.000 KM'), (25000, '25.000 KM'), (30000, '30.000 KM'), (35000, '35.000 KM'), (40000, '40.000 KM'), (45000, '45.000 KM'), (50000, '50.000 KM'), (55000, '55.000 KM'), (60000, '60.000 KM'), (65000, '65.000 KM'), (70000, '70.000 KM'), (75000, '75.000 KM'), (80000, '80.000 KM'), (85000, '85.000 KM'), (90000, '90.000 KM'), (95000, '95.000 KM'), (100000, '100.000 KM'), (105000, '105.000 KM'), (110000, '110.000 KM'), (115000, '115.000 KM'), (120000, '120.000 KM'), (125000, '125.000 KM'), (130000, '130.000 KM'), (135000, '135.000 KM'), (140000, '140.000 KM'), (145000, '145.000 KM'), (150000, '150.000 KM'), (155000, '155.000 KM'), (160000, '160.000 KM'), (165000, '165.000 KM'), (170000, '170.000 KM'), (175000, '175.000 KM'), (180000, '180.000 KM'), (185000, '185.000 KM'), (190000, '190.000 KM'), (195000, '195.000 KM'), (200000, '200.000 KM')], null=True, validators=[django.core.validators.MinValueValidator(5000), django.core.validators.MaxValueValidator(200000)])),
                ('papeles_en_regla', models.BooleanField(default=False)),
                ('taller_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='administracion.taller')),
            ],
        ),
    ]
