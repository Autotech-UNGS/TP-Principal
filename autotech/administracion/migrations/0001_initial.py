# Generated by Django 4.2.1 on 2023-06-07 19:10

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Checklist_evaluacion',
            fields=[
                ('id_task', models.AutoField(primary_key=True, serialize=False)),
                ('elemento', models.TextField()),
                ('tarea', models.TextField()),
                ('costo_reemplazo', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('duracion_reemplazo', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('puntaje_max', models.IntegerField(default=2500, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2500)])),
            ],
        ),
        migrations.CreateModel(
            name='Checklist_service',
            fields=[
                ('id_task', models.AutoField(primary_key=True, serialize=False)),
                ('elemento', models.TextField()),
                ('tarea', models.TextField()),
                ('costo_reemplazo', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('duracion_reemplazo', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Cobro_x_hora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puesto', models.CharField(max_length=30)),
                ('categoria', models.CharField(blank=True, max_length=1, null=True)),
                ('cobro_x_hora', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(3800.0)])),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id_service', models.AutoField(primary_key=True, serialize=False)),
                ('marca', models.CharField(max_length=50)),
                ('modelo', models.CharField(max_length=50)),
                ('frecuencia_km', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('costo_base', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('costo_total', models.FloatField(default=models.FloatField(validators=[django.core.validators.MinValueValidator(0)]), validators=[django.core.validators.MinValueValidator(models.FloatField(validators=[django.core.validators.MinValueValidator(0)]))])),
                ('duracion_total', models.PositiveIntegerField()),
                ('fecha_creacion', models.DateField(auto_now_add=True)),
                ('id_supervisor', models.PositiveIntegerField()),
                ('activo', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Taller',
            fields=[
                ('id_taller', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(code='invalid_nombre_taller', message='El nombre de taller debe contener solo números, letras, espacios y &', regex='^[a-zA-Z0-9&\\s]+$')])),
                ('direccion', models.CharField(max_length=30)),
                ('localidad', models.CharField(max_length=30)),
                ('provincia', models.CharField(max_length=30)),
                ('cod_postal', models.CharField(max_length=4)),
                ('mail', models.EmailField(max_length=254)),
                ('telefono', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='El número de teléfono debe tener el formato +1234567890 y contener de 9 a 15 dígitos.', regex='^\\+?1?\\d{9,15}$')])),
                ('capacidad', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('cant_tecnicos', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(45)])),
                ('id_sucursal', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('estado', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Turno_taller',
            fields=[
                ('id_turno', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('service', 'Service'), ('evaluacion', 'Evaluacion'), ('extraordinario', 'Extraordinario'), ('reparacion', 'Reparacion')], default='service', max_length=14)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('rechazado', 'Rechazado'), ('en_proceso', 'En proceso'), ('terminado', 'Terminado'), ('cancelado', 'Cancelado'), ('ausente', 'Ausente')], default='en_proceso', max_length=10)),
                ('tecnico_id', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
                ('patente', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator('^(([A-Z]{2}\\d{3}[A-Z]{2})|([A-Z]{3}\\d{3}))$', code='invalid_patente', message='La patente ingresada no es valida. Debe ser en mayusculas con el formato 00AAA00 o AAA000 ')])),
                ('fecha_inicio', models.DateField(max_length=10)),
                ('hora_inicio', models.TimeField(max_length=8)),
                ('fecha_fin', models.DateField(max_length=10)),
                ('hora_fin', models.TimeField(max_length=8)),
                ('frecuencia_km', models.IntegerField(blank=True, choices=[(5000, '5.000 KM'), (10000, '10.000 KM'), (15000, '15.000 KM'), (20000, '20.000 KM'), (25000, '25.000 KM'), (30000, '30.000 KM'), (35000, '35.000 KM'), (40000, '40.000 KM'), (45000, '45.000 KM'), (50000, '50.000 KM'), (55000, '55.000 KM'), (60000, '60.000 KM'), (65000, '65.000 KM'), (70000, '70.000 KM'), (75000, '75.000 KM'), (80000, '80.000 KM'), (85000, '85.000 KM'), (90000, '90.000 KM'), (95000, '95.000 KM'), (100000, '100.000 KM'), (105000, '105.000 KM'), (110000, '110.000 KM'), (115000, '115.000 KM'), (120000, '120.000 KM'), (125000, '125.000 KM'), (130000, '130.000 KM'), (135000, '135.000 KM'), (140000, '140.000 KM'), (145000, '145.000 KM'), (150000, '150.000 KM'), (155000, '155.000 KM'), (160000, '160.000 KM'), (165000, '165.000 KM'), (170000, '170.000 KM'), (175000, '175.000 KM'), (180000, '180.000 KM'), (185000, '185.000 KM'), (190000, '190.000 KM'), (195000, '195.000 KM'), (200000, '200.000 KM')], null=True, validators=[django.core.validators.MinValueValidator(5000), django.core.validators.MaxValueValidator(200000)])),
                ('papeles_en_regla', models.BooleanField(default=True)),
                ('taller_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='administracion.taller')),
            ],
        ),
        migrations.CreateModel(
            name='Registro_reparacion',
            fields=[
                ('id_turno', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='administracion.turno_taller')),
                ('tasks_hechas', models.JSONField(blank=True, null=True)),
                ('tasks_pendientes', models.JSONField(blank=True, null=True)),
                ('costo_total', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)])),
                ('duracion_total', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('fecha_registro', models.DateField(auto_now_add=True)),
                ('detalle', models.TextField(blank=True, null=True)),
                ('detalle_evaluacion', models.TextField(blank=True, null=True)),
                ('origen', models.TextField(blank=True, choices=[('evaluacion', 'Evaluacion'), ('extraordinario', 'Extraordinario')], null=True)),
                ('estado', models.CharField(choices=[('en_proceso', 'En proceso'), ('terminado', 'Terminado')], default='en_proceso', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Service_tasks',
            fields=[
                ('id_id_tasks', models.AutoField(primary_key=True, serialize=False)),
                ('id_tasks', models.JSONField()),
                ('id_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administracion.service')),
            ],
        ),
        migrations.CreateModel(
            name='Registro_service',
            fields=[
                ('id_registro', models.AutoField(primary_key=True, serialize=False)),
                ('costo_total', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('duracion_total', models.PositiveIntegerField()),
                ('fecha_registro', models.DateField(auto_now_add=True)),
                ('garantia', models.BooleanField(default=False)),
                ('id_tasks_reemplazadas', models.JSONField()),
                ('id_service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='administracion.service')),
                ('id_turno', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='administracion.turno_taller')),
            ],
        ),
        migrations.CreateModel(
            name='Registro_extraordinario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_tasks', models.JSONField()),
                ('detalle', models.TextField(blank=True, null=True)),
                ('id_turno', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='administracion.turno_taller')),
            ],
        ),
        migrations.CreateModel(
            name='Registro_evaluacion_para_admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('costo_total', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)])),
                ('duracion_total_reparaciones', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('puntaje_total', models.IntegerField(default=2500, validators=[django.core.validators.MinValueValidator(-2500), django.core.validators.MaxValueValidator(2500)])),
                ('detalle', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateField(auto_now_add=True)),
                ('id_turno', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='administracion.turno_taller')),
            ],
        ),
        migrations.CreateModel(
            name='Registro_evaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_task_puntaje', models.JSONField(blank=True, null=True)),
                ('detalle', models.TextField(blank=True, null=True)),
                ('id_turno', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='administracion.turno_taller')),
            ],
        ),
    ]
